version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.11.2-stretch-node
      - image: circleci/postgres:10.5-alpine
        environment:
          POSTGRES_USER: molepatrol
          POSTGRES_PASSWORD: molepatrol
          POSTGRES_DB: molepatrol

    working_directory: /go/src/bitbucket.org/meditekdevsteam/ml-check-mole-api

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependencies

      - run:
          name: Install Serverless CLI and dependencies
          command: |
            sudo npm i -g serverless
            npm install
            npm install --save-dev serverless-apigw-binary
            go get -v golang.org/x/tools/cmd/cover
            go get -v github.com/alecthomas/gometalinter
            go get -v github.com/onsi/ginkgo/ginkgo
            go get -v github.com/onsi/gomega
            go get -v github.com/wadey/gocovmerge
            go get -v github.com/lib/pq
            go get -u -d github.com/golang-migrate/migrate/cli
            cd $GOPATH/src/github.com/golang-migrate/migrate/cli
            go build -tags 'postgres' -o $GOPATH/bin/migrate github.com/golang-migrate/migrate/cli
            cd /go/src/bitbucket.org/meditekdevsteam/ml-check-mole-api
            gometalinter --install

      - save_cache:
          paths:
            - node_modules
            - /home/circleci/go/bin
          key: dependencies
        
      # run tests!
      - run:
          name: Run the linter
          command: gometalinter --config=./gometalinter.json --vendor --deadline=240s ./...

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - run: 
          name: Run tests with coverage
          command: |
            mkdir -p /tmp/artifacts
            ginkgo -r --randomizeAllSpecs --randomizeSuites --failOnPending --cover --trace --progress
            find . -name "*.coverprofile" | xargs gocovmerge > coverage.out
            go tool cover -html=coverage.out -o /tmp/artifacts/coverage.html
            go tool cover -func=coverage.out | grep total | grep \(statements\) | awk '{print $3}' | xargs echo Total coverage is
      
      - store_artifacts:
          path: /tmp/artifacts

      - run:
          name: Run migrations
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              make migrate-prod
            fi
            if [ "$CIRCLE_BRANCH" = "staging" ]; then
              make migrate-staging
            fi
            if [ "$CIRCLE_BRANCH" = "develop" ]; then
              make migrate-dev
            fi

      - run:
          name: Deploy application
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              make deploy-prod
            fi
            if [ "$CIRCLE_BRANCH" = "staging" ]; then
              make deploy-staging
            fi
            if [ "$CIRCLE_BRANCH" = "develop" ]; then
              make deploy-dev
            fi
